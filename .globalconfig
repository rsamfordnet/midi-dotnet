# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-files#global-analyzerconfig
# https://youtrack.jetbrains.com/issue/RIDER-78591/Top-level-declaration-in-globalconfig
is_global = true

# Analyzer Settings
dotnet_diagnostic.IDE0005.severity = warning	# Using directive is unnecessary
dotnet_diagnostic.IDE0016.severity = warning	# Null check can be simplified
dotnet_diagnostic.IDE0017.severity = silent		# Object initialization can be simplified
dotnet_diagnostic.IDE0021.severity = warning	# Use block body for constructors
dotnet_diagnostic.IDE0022.severity = warning	# Use block body for methods
dotnet_diagnostic.IDE0025.severity = warning	# Use expression body for properties
dotnet_diagnostic.IDE0028.severity = warning	# Collection initialization an be simplified
dotnet_diagnostic.IDE0037.severity = silent		# Member name can be simplified
dotnet_diagnostic.IDE0045.severity = silent		# "if" statement can be simplified.
dotnet_diagnostic.IDE0047.severity = silent		# Parenthesis can be removed
dotnet_diagnostic.IDE0051.severity = silent		# Private member is unused
dotnet_diagnostic.IDE0052.severity = warning	# Private member can be removed as the value assigned to it is never read
dotnet_diagnostic.IDE0056.severity = silent		# Parentheses should be added for clarity
dotnet_diagnostic.IDE0057.severity = silent		# Substring can be simplified
dotnet_diagnostic.IDE0071.severity = warning	# Interpolation can be simplified
dotnet_diagnostic.IDE0075.severity = warning	# Conditional expression can be simplified
dotnet_diagnostic.IDE0079.severity = none		# Remove unnecessary suppression (not everyone has resharper/rider installed)
dotnet_diagnostic.IDE0090.severity = warning	# Simplify `new` expression
dotnet_diagnostic.IDE0250.severity = warning	# Struct can be made readonly
dotnet_diagnostic.IDE1006.severity = silent		# Naming Styles

dotnet_diagnostic.CA1000.severity = none		# Do not declare static members on generic types
dotnet_diagnostic.CA1002.severity = none		# Do not expose generic lists
dotnet_diagnostic.CA1008.severity = none		# Enums should have zero value
dotnet_diagnostic.CA1012.severity = none		# Abstract types should not have constructors
dotnet_diagnostic.CA1019.severity = none		# Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.CA1024.severity = none		# Use properties where appropriate
dotnet_diagnostic.CA1028.severity = none		# If possible, make the underlying type of GenericHandshakeMessageType System.Int32 instead of byte
dotnet_diagnostic.CA1031.severity = none		# Do not catch general exception types
dotnet_diagnostic.CA1032.severity = none		# Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none		# Implement standard exception constructors
dotnet_diagnostic.CA1033.severity = none		# Interface methods should be callable by child types
dotnet_diagnostic.CA1034.severity = none		# Nested types should not be visible
dotnet_diagnostic.CA1040.severity = none		# Avoid empty interfaces
dotnet_diagnostic.CA1050.severity = none		# Declare types in namespaces
dotnet_diagnostic.CA1054.severity = silent		# URI parameters should not be strings
dotnet_diagnostic.CA1055.severity = silent		# URI return values should not be strings
dotnet_diagnostic.CA1056.severity = silent		# URI properties should not be strings
dotnet_diagnostic.CA1062.severity = none		# Validate arguments of public methods
dotnet_diagnostic.CA1063.severity = none		# Implement IDisposable correctly
dotnet_diagnostic.CA1303.severity = none		# Do not pass literals as localized parameters
dotnet_diagnostic.CA1304.severity = none		# Specify CultureInfo
dotnet_diagnostic.CA1305.severity = none		# Specify IFormatProvider
dotnet_diagnostic.CA1307.severity = silent		# Specify StringComparison for clarity
dotnet_diagnostic.CA1308.severity = silent		# Normalize strings to uppercase
dotnet_diagnostic.CA1309.severity = silent		# Use ordinal StringComparison
dotnet_diagnostic.CA1310.severity = none		# Specify StringComparison for correctness
dotnet_diagnostic.CA1507.severity = warning		# Use nameof in place of string literal
dotnet_diagnostic.CA1508.severity = none		# Avoid dead conditional code
dotnet_diagnostic.CA1707.severity = none		# Identifiers should not contain underscores
dotnet_diagnostic.CA1711.severity = none		# Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1715.severity = none		# Prefix interface name with 'I'
dotnet_diagnostic.CA1716.severity = none		# Identifiers should not match keywords
dotnet_diagnostic.CA1721.severity = none		# Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none		# Property names should not match get methods
dotnet_diagnostic.CA1724.severity = none		# Type Names Should Not Match Namespaces
dotnet_diagnostic.CA1725.severity = none		# Parameter names should match base declaration
dotnet_diagnostic.CA1801.severity = none		# Review unused parameters
dotnet_diagnostic.CA1802.severity = none		# Use Literals Where Appropriate
dotnet_diagnostic.CA1805.severity = none		# Do not initialize unnecessarily
dotnet_diagnostic.CA1812.severity = none		# Avoid uninstantiated internal classes
dotnet_diagnostic.CA1813.severity = none		# Avoid unsealed attributes
dotnet_diagnostic.CA1814.severity = none		# Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1816.severity = none		# Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1819.severity = none		# Properties should not return arrays
dotnet_diagnostic.CA1822.severity = silent		# Member can be marked as static
dotnet_diagnostic.CA1825.severity = warning		# Avoid unnecessary zero-length array allocations. Use Array.Empty<T>() instead.
dotnet_diagnostic.CA1827.severity = warning		# Count() is used where Any() could be used instead to improve performance
dotnet_diagnostic.CA1834.severity = warning		# Use StringBuilder.Append(char) instead of StringBuilder.Append(string)
dotnet_diagnostic.CA1845.severity = warning		# Use span-based string.Concat and AsSpan instead of Substring
dotnet_diagnostic.CA1847.severity = warning		# Use string.Contains(char) instead of string.Contains(string)
dotnet_diagnostic.CA1848.severity = none		# Use the LoggerMessage delegates
dotnet_diagnostic.CA1849.severity = silent	    # Call async methods when in an async method
dotnet_diagnostic.CA1854.severity = warning	    # Prefer a TryGetValue call over a dictionary indexer access guarded by a ContainsKey check to avoid double lookup
dotnet_diagnostic.CA2000.severity = none		# Dispose objects before losing scope
dotnet_diagnostic.CA2007.severity = none		# Do not directly await a Task without ConfigureAwait
dotnet_diagnostic.CA2008.severity = none		# Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2016.severity = warning		# Forward the cancellation token parameter or pass in CancellationToken.None explicitly
dotnet_diagnostic.CA2100.severity = none		# Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2201.severity = none		# Do not raise reserved exception types
dotnet_diagnostic.CA2213.severity = none		# Disposable fields should be disposed
dotnet_diagnostic.CA2225.severity = silent		# Provide a named method as an alternate for implicit operator
dotnet_diagnostic.CA2227.severity = none		# Collection properties should be read only
dotnet_diagnostic.CA2234.severity = silent		# Pass System.Uri objects instead of strings
dotnet_diagnostic.CA2253.severity = warning		# Named placeholders in the logging message template should not be compised of only numeric characters
dotnet_diagnostic.CA2254.severity = none		# Template should be a static expression
dotnet_diagnostic.CA5394.severity = none		# Do not use insecure randomness
dotnet_diagnostic.CA5399.severity = none		# Definitely disable HttpClient certificate revocation list check
